{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { CedulaContext } from \"../componentsWeb/CedulaContext\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Layout from \"../componentsWeb/Layout\";\nimport { postSolicitudes, getSolicitudes, updateSolicitudes } from \"../api\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar SolicitudesFormScreen = function SolicitudesFormScreen(_ref) {\n  var navigation = _ref.navigation,\n    route = _ref.route;\n  var _useContext = useContext(CedulaContext),\n    cedulaGlobal = _useContext.cedulaGlobal;\n  var _useState = useState({\n      id_sol: \"\",\n      cedula_per: \"\",\n      id_equ: \"\",\n      estado_sol: \"\",\n      observaciones_sol: \"\"\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    solicitudes = _useState2[0],\n    setSolicitudes = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    editing = _useState4[0],\n    setEditing = _useState4[1];\n  var handleChangeSolicitudes = function handleChangeSolicitudes(name, value) {\n    return setSolicitudes(_objectSpread(_objectSpread({}, solicitudes), {}, _defineProperty({}, name, value)));\n  };\n  var handleSubmit = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        if (!editing) {\n          yield postSolicitudes(solicitudes);\n        } else {\n          yield updateSolicitudes(route.params.id_sol, solicitudes);\n        }\n        navigation.navigate('SolicitudesScreen');\n      } catch (error) {\n        if (error.response && error.response.status === 45000) {\n          Alert.alert(\"Error\", \"No es posible actualizar la solicitud porque el equipo está ocupado.\");\n        } else if (error.response && error.response.status === 404) {\n          Alert.alert(\"Error\", \"La cédula no se encuentra en la base de datos.\");\n        } else {\n          Alert.alert(\"Error\", \"Ocurrió un error al procesar la solicitud.\");\n        }\n      }\n    });\n    return function handleSubmit() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var handleOptionSelectEstado = function handleOptionSelectEstado(option) {\n    setSelectedOptionEstado(option);\n    setEstado(option);\n    setModalVisibleEstado(false);\n    handleChangeSolicitudes(\"estado_sol\", option);\n    validateFields();\n  };\n  useEffect(function () {\n    validateFields();\n  }, [id_sol, cedula_per, id_equ, estado_sol, observaciones_sol]);\n  var validateInput = function validateInput(text) {\n    var regex = /^[a-zA-Z]+$/;\n    if (regex.test(text) || text === \"\") {\n      return true;\n    }\n    return false;\n  };\n  var validateFields = function validateFields() {\n    var requiredFields = [cedula_per, id_equ];\n    var isAnyFieldEmpty = requiredFields.some(function (field) {\n      return field === \"\";\n    });\n    var isCedulaValid = cedula_per.length === 10;\n    setButtonEnabled(!isAnyFieldEmpty && isCedulaValid);\n  };\n  var renderIdSolWarning = function renderIdSolWarning() {\n    if (id_sol.length < 1) {\n      return _jsx(Text, {\n        style: styles.warningText,\n        children: \"El id se asigna automaticamente\"\n      });\n    }\n    return null;\n  };\n  var renderCedulaWarning = function renderCedulaWarning() {\n    if (cedula_per.length < 10) {\n      return _jsx(Text, {\n        style: styles.warningText,\n        children: \"La cedula tiene que tener 10 digitos.\"\n      });\n    }\n    return null;\n  };\n  var renderIdEquWarning = function renderIdEquWarning() {\n    if (id_equ.length < 1) {\n      return _jsx(Text, {\n        style: styles.warningText,\n        children: \"Ingrese un id existente\"\n      });\n    }\n    return null;\n  };\n  var renderEstadoWarning = function renderEstadoWarning() {\n    if (estado_sol.length < 1) {\n      return _jsx(Text, {\n        style: styles.warningText,\n        children: \"Seleccione el estado de la maquina\"\n      });\n    }\n    return null;\n  };\n  var renderObservacionesWarning = function renderObservacionesWarning() {\n    if (observaciones_sol.length < 4) {\n      return _jsx(Text, {\n        style: styles.warningText,\n        children: \"Ingrese una observacion valida, minimo 4 caracteres\"\n      });\n    }\n    return null;\n  };\n  useEffect(function () {\n    if (route.params && route.params.id_sol) {\n      navigation.setOptions({\n        headerTitle: 'Modificando una solicitud'\n      });\n      setEditing(true);\n      _asyncToGenerator(function* () {\n        var solicitudes = yield getSolicitudes(route.params.id_sol);\n        setSolicitudes({\n          id_sol: solicitudes.id_sol,\n          cedula_per: solicitudes.cedula_per,\n          id_equ: solicitudes.id_equ,\n          estado_sol: solicitudes.estado_sol,\n          observaciones_sol: solicitudes.observaciones_sol\n        });\n        setIdSol(solicitudes.id_sol);\n        setCedula(solicitudes.cedula_per);\n        setIdEqu(solicitudes.id_equ);\n        setEstado(solicitudes.estado_sol);\n        setObservaciones(solicitudes.observaciones_sol);\n        validateFields();\n      })();\n    }\n  }, []);\n  useEffect(function () {\n    if (route.params && route.params.id_equ) {\n      setIdEqu(route.params.id_equ);\n      handleChangeSolicitudes('id_equ', route.params.id_equ);\n    }\n  }, []);\n  useEffect(function () {\n    setCedula(cedulaGlobal);\n  }, [cedulaGlobal]);\n  return _jsx(ScrollView, {\n    children: _jsxs(Layout, {\n      children: [editing ? _jsxs(_Fragment, {\n        children: [_jsx(TextInput, {\n          style: styles.input,\n          placeholder: \"Id Solicitud\",\n          placeholderTextColor: \"#000000\",\n          value: solicitudes.id_sol.toString(),\n          onChangeText: function onChangeText(text) {\n            setId(text);\n            handleChangeEquipos('id_sol', text);\n          },\n          editable: route.params && route.params.id_sol ? false : false\n        }), renderIdSolWarning()]\n      }) : null, _jsx(TextInput, {\n        style: styles.input,\n        placeholder: \"Cedula Persona\",\n        placeholderTextColor: \"#000000\",\n        value: solicitudes.cedula_per.toString(),\n        onChangeText: function onChangeText(text) {\n          setCedula(text);\n          handleChangeSolicitudes('cedula_per', text);\n        },\n        maxLength: 10,\n        editable: route.params && route.params.id_sol ? false : false\n      }), renderCedulaWarning(), _jsx(TextInput, {\n        style: styles.input,\n        placeholder: \"Id Equipo\",\n        placeholderTextColor: \"#000000\",\n        value: solicitudes.id_equ.toString(),\n        onChangeText: function onChangeText(text) {\n          setIdEqu(text);\n          handleChangeSolicitudes('id_equ', text);\n        },\n        maxLength: 10,\n        editable: route.params && route.params.id_sol ? false : false\n      }), renderIdEquWarning(), editing ? _jsxs(_Fragment, {\n        children: [_jsx(TextInput, {\n          style: styles.input,\n          placeholder: \"Estado Solicitud\",\n          placeholderTextColor: \"#000000\",\n          value: solicitudes.estado_sol,\n          onChangeText: function onChangeText(text) {\n            setEstado(text);\n            handleChangeEquipos('estado_sol', text);\n          },\n          onFocus: function onFocus() {\n            return setModalVisibleEstado(true);\n          },\n          editable: false\n        }), renderEstadoWarning(), _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            return setModalVisibleEstado(true);\n          },\n          children: _jsx(Text, {\n            style: styles.buttonText,\n            children: \"Seleccionar Estado\"\n          })\n        }), _jsx(Modal, {\n          visible: modalVisibleEstado,\n          animationType: \"slide\",\n          transparent: true,\n          onRequestClose: function onRequestClose() {\n            return setModalVisibleEstado(false);\n          },\n          children: _jsx(View, {\n            style: {\n              flex: 1,\n              justifyContent: \"center\",\n              alignItems: \"center\"\n            },\n            children: _jsxs(View, {\n              style: {\n                backgroundColor: \"white\",\n                padding: 20,\n                backgroundColor: \"#AF8A46\"\n              },\n              children: [_jsx(TouchableOpacity, {\n                onPress: function onPress() {\n                  return handleOptionSelectEstado(\"Aprobado\");\n                },\n                children: _jsx(Text, {\n                  style: {\n                    textAlign: \"center\",\n                    marginTop: 10,\n                    backgroundColor: \"#EBBA5F\"\n                  },\n                  children: \"Aprobado\"\n                })\n              }), _jsx(TouchableOpacity, {\n                onPress: function onPress() {\n                  return handleOptionSelectEstado(\"Rechazado\");\n                },\n                children: _jsx(Text, {\n                  style: {\n                    textAlign: \"center\",\n                    marginTop: 30,\n                    marginBottom: 30,\n                    backgroundColor: \"#EBBA5F\"\n                  },\n                  children: \"Rechazado\"\n                })\n              }), _jsx(TouchableOpacity, {\n                onPress: function onPress() {\n                  return handleOptionSelectEstado(\"Pendiente\");\n                },\n                children: _jsx(Text, {\n                  style: {\n                    textAlign: \"center\",\n                    marginTop: 10,\n                    marginBottom: 30,\n                    backgroundColor: \"#EBBA5F\"\n                  },\n                  children: \"Pendiente\"\n                })\n              }), _jsx(Button, {\n                title: \"Cerrar\",\n                onPress: function onPress() {\n                  return setModalVisibleEstado(false);\n                }\n              })]\n            })\n          })\n        })]\n      }) : null, editing ? _jsxs(_Fragment, {\n        children: [_jsx(TextInput, {\n          style: styles.input,\n          placeholder: \"Observacion Solicitud\",\n          placeholderTextColor: \"#000000\",\n          value: solicitudes.observaciones_sol,\n          onChangeText: function onChangeText(text) {\n            setObservaciones(text);\n            handleChangeSolicitudes('observaciones_sol', text);\n          },\n          maxLength: 50\n        }), renderObservacionesWarning()]\n      }) : null, !editing ? _jsx(TouchableOpacity, {\n        disabled: !isButtonEnabled,\n        onPress: handleSubmit,\n        children: _jsx(Text, {\n          style: [styles.buttonText, isButtonEnabled ? styles.buttonEnabled : styles.buttonDisabled],\n          children: \"Guardar Solicitud\"\n        })\n      }) : _jsx(TouchableOpacity, {\n        disabled: !isButtonEnabled,\n        onPress: handleSubmit,\n        children: _jsx(Text, {\n          style: [styles.buttonText, isButtonEnabled ? styles.buttonEnabled : styles.buttonDisabled],\n          children: \"Actualizar Solicitud\"\n        })\n      })]\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  input: {\n    width: \"90%\",\n    backgroundColor: \"#fff\",\n    padding: 15,\n    marginTop: 20,\n    borderWidth: 3,\n    borderColor: \"#AF8A46\"\n  },\n  buttonText: {\n    backgroundColor: \"#AF8A46\",\n    marginTop: 10,\n    padding: 15,\n    color: \"#fff\",\n    textAlign: \"center\",\n    width: 330\n  },\n  buttonEnabled: {\n    opacity: 1\n  },\n  buttonDisabled: {\n    opacity: 0.5\n  },\n  warningText: {\n    color: \"red\",\n    fontSize: 12\n  }\n});\nexport default SolicitudesFormScreen;","map":{"version":3,"names":["React","useState","useEffect","useContext","CedulaContext","View","Text","TextInput","StyleSheet","TouchableOpacity","ScrollView","Modal","Button","Alert","Layout","postSolicitudes","getSolicitudes","updateSolicitudes","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","SolicitudesFormScreen","_ref","navigation","route","_useContext","cedulaGlobal","_useState","id_sol","cedula_per","id_equ","estado_sol","observaciones_sol","_useState2","_slicedToArray","solicitudes","setSolicitudes","_useState3","_useState4","editing","setEditing","handleChangeSolicitudes","name","value","_objectSpread","_defineProperty","handleSubmit","_ref2","_asyncToGenerator","params","navigate","error","response","status","alert","apply","arguments","handleOptionSelectEstado","option","setSelectedOptionEstado","setEstado","setModalVisibleEstado","validateFields","validateInput","text","regex","test","requiredFields","isAnyFieldEmpty","some","field","isCedulaValid","length","setButtonEnabled","renderIdSolWarning","style","styles","warningText","children","renderCedulaWarning","renderIdEquWarning","renderEstadoWarning","renderObservacionesWarning","setOptions","headerTitle","setIdSol","setCedula","setIdEqu","setObservaciones","input","placeholder","placeholderTextColor","toString","onChangeText","setId","handleChangeEquipos","editable","maxLength","onFocus","onPress","buttonText","visible","modalVisibleEstado","animationType","transparent","onRequestClose","flex","justifyContent","alignItems","backgroundColor","padding","textAlign","marginTop","marginBottom","title","disabled","isButtonEnabled","buttonEnabled","buttonDisabled","create","width","borderWidth","borderColor","color","opacity","fontSize"],"sources":["C:/Users/chris/OneDrive/Escritorio/UTA/Aplicaciones Disribuidas/ReactNative/AD-app/screen/SolicitudesFormScreen.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\r\n\r\nimport { CedulaContext } from '../componentsWeb/CedulaContext';\r\n\r\nimport { View, Text, TextInput, StyleSheet, TouchableOpacity, ScrollView, Modal, Button, Alert } from \"react-native\";\r\n\r\nimport Layout from \"../componentsWeb/Layout\";\r\nimport { postSolicitudes, getSolicitudes, updateSolicitudes } from \"../api\";\r\n\r\nconst SolicitudesFormScreen = ({ navigation, route }) => {\r\n\r\n    const { cedulaGlobal } = useContext(CedulaContext);\r\n\r\n    const [solicitudes, setSolicitudes] = useState({\r\n        id_sol: \"\",\r\n        cedula_per: \"\",\r\n        id_equ: \"\",\r\n        estado_sol: \"\",\r\n        observaciones_sol: \"\",\r\n    });\r\n\r\n    const [editing, setEditing] = useState(false);\r\n    const handleChangeSolicitudes = (name, value) => setSolicitudes({ ...solicitudes, [name]: value });\r\n\r\n    const handleSubmit = async () => {\r\n        try {\r\n            if (!editing) {\r\n                await postSolicitudes(solicitudes);\r\n            } else {\r\n                await updateSolicitudes(route.params.id_sol, solicitudes);\r\n            }\r\n            navigation.navigate('SolicitudesScreen')\r\n        } catch (error) {\r\n            if (error.response && error.response.status === 45000) {\r\n                Alert.alert(\"Error\", \"No es posible actualizar la solicitud porque el equipo está ocupado.\");\r\n            } else if (error.response && error.response.status === 404) {\r\n                Alert.alert(\"Error\", \"La cédula no se encuentra en la base de datos.\");\r\n            } else {\r\n                Alert.alert(\"Error\", \"Ocurrió un error al procesar la solicitud.\");\r\n            }\r\n        }\r\n    };\r\n\r\n\r\n\r\n\r\n    const handleOptionSelectEstado = (option) => {\r\n        setSelectedOptionEstado(option);\r\n        setEstado(option);\r\n        setModalVisibleEstado(false);\r\n        handleChangeSolicitudes(\"estado_sol\", option);\r\n        validateFields();\r\n    };\r\n\r\n    useEffect(() => {\r\n        validateFields();\r\n    }, [\r\n        id_sol,\r\n        cedula_per,\r\n        id_equ,\r\n        estado_sol,\r\n        observaciones_sol,\r\n    ]);\r\n\r\n    const validateInput = (text) => {\r\n        const regex = /^[a-zA-Z]+$/;\r\n        if (regex.test(text) || text === \"\") {\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n\r\n    const validateFields = () => {\r\n        const requiredFields = [\r\n            cedula_per,\r\n            id_equ,\r\n        ];\r\n        const isAnyFieldEmpty = requiredFields.some((field) => field === \"\");\r\n        const isCedulaValid = cedula_per.length === 10;\r\n\r\n        setButtonEnabled(!isAnyFieldEmpty && isCedulaValid);\r\n\r\n    };\r\n\r\n    const renderIdSolWarning = () => {\r\n        if (id_sol.length < 1) {\r\n            return (\r\n                <Text style={styles.warningText}>\r\n                    El id se asigna automaticamente\r\n                </Text>\r\n            );\r\n        }\r\n        return null;\r\n    };\r\n\r\n    const renderCedulaWarning = () => {\r\n        if (cedula_per.length < 10) {\r\n            return (\r\n                <Text style={styles.warningText}>\r\n                    La cedula tiene que tener 10 digitos.\r\n                </Text>\r\n            );\r\n        }\r\n        return null;\r\n    };\r\n\r\n    const renderIdEquWarning = () => {\r\n        if (id_equ.length < 1) {\r\n            return (\r\n                <Text style={styles.warningText}>\r\n                    Ingrese un id existente\r\n                </Text>\r\n            );\r\n        }\r\n        return null;\r\n    };\r\n\r\n    const renderEstadoWarning = () => {\r\n        if (estado_sol.length < 1) {\r\n            return (\r\n                <Text style={styles.warningText}>\r\n                    Seleccione el estado de la maquina\r\n                </Text>\r\n            );\r\n        }\r\n        return null;\r\n    };\r\n\r\n    const renderObservacionesWarning = () => {\r\n        if (observaciones_sol.length < 4) {\r\n            return (\r\n                <Text style={styles.warningText}>\r\n                    Ingrese una observacion valida, minimo 4 caracteres\r\n                </Text>\r\n            );\r\n        }\r\n        return null;\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (route.params && route.params.id_sol) {\r\n            navigation.setOptions({ headerTitle: 'Modificando una solicitud' });\r\n            setEditing(true);\r\n            (async () => {\r\n                const solicitudes = await getSolicitudes(route.params.id_sol);\r\n                setSolicitudes({\r\n                    id_sol: solicitudes.id_sol,\r\n                    cedula_per: solicitudes.cedula_per,\r\n                    id_equ: solicitudes.id_equ,\r\n                    estado_sol: solicitudes.estado_sol,\r\n                    observaciones_sol: solicitudes.observaciones_sol,\r\n                })\r\n\r\n                // Establecer los valores iniciales en los TextInput\r\n                setIdSol(solicitudes.id_sol);\r\n                setCedula(solicitudes.cedula_per);\r\n                setIdEqu(solicitudes.id_equ);\r\n                setEstado(solicitudes.estado_sol);\r\n                setObservaciones(solicitudes.observaciones_sol);\r\n\r\n                // Comprobar los valores de los TextInput\r\n                validateFields();\r\n            })();\r\n        }\r\n    }, [])    \r\n\r\n    useEffect(() => {\r\n        if (route.params && route.params.id_equ) {\r\n            setIdEqu(route.params.id_equ);\r\n            handleChangeSolicitudes('id_equ', route.params.id_equ);\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        setCedula(cedulaGlobal);\r\n    }, [cedulaGlobal]);\r\n\r\n    return (\r\n        <ScrollView>\r\n            <Layout>\r\n\r\n                {\r\n                    editing ? (<><TextInput\r\n                        style={styles.input}\r\n                        placeholder=\"Id Solicitud\"\r\n                        placeholderTextColor=\"#000000\"\r\n                        value={solicitudes.id_sol.toString()}\r\n                        onChangeText={(text) => {\r\n                            setId(text);\r\n                            handleChangeEquipos('id_sol', text);\r\n                        }}\r\n                        editable={route.params && route.params.id_sol ? false : false} // Desactivar edición\r\n                    />\r\n                        {renderIdSolWarning()}</>) : (null)\r\n                }\r\n\r\n                <TextInput\r\n                    style={styles.input}\r\n                    placeholder=\"Cedula Persona\"\r\n                    placeholderTextColor=\"#000000\"\r\n                    value={solicitudes.cedula_per.toString()}\r\n                    onChangeText={(text) => {\r\n                        setCedula(text);\r\n                        handleChangeSolicitudes('cedula_per', text);\r\n                    }}                    \r\n                    maxLength={10}\r\n                    editable={route.params && route.params.id_sol ? false : false}\r\n                />\r\n                {renderCedulaWarning()}\r\n                <TextInput\r\n                    style={styles.input}\r\n                    placeholder=\"Id Equipo\"\r\n                    placeholderTextColor=\"#000000\"\r\n                    value={solicitudes.id_equ.toString()}\r\n                    onChangeText={(text) => {\r\n                        setIdEqu(text);\r\n                        handleChangeSolicitudes('id_equ', text);\r\n                    }}\r\n                    maxLength={10}\r\n                    editable={route.params && route.params.id_sol ? false : false}\r\n                />\r\n                {renderIdEquWarning()}\r\n\r\n                {\r\n                    editing ? (\r\n                        <>\r\n                            <TextInput\r\n                                style={styles.input}\r\n                                placeholder=\"Estado Solicitud\"\r\n                                placeholderTextColor=\"#000000\"\r\n                                value={solicitudes.estado_sol}\r\n                                onChangeText={(text) => {\r\n                                    setEstado(text);\r\n                                    handleChangeEquipos('estado_sol', text);\r\n                                }}\r\n                                onFocus={() => setModalVisibleEstado(true)}\r\n                                editable={false}\r\n                            />\r\n                            {renderEstadoWarning()}\r\n                            <TouchableOpacity onPress={() => setModalVisibleEstado(true)}>\r\n                                <Text style={styles.buttonText}>Seleccionar Estado</Text>\r\n                            </TouchableOpacity>\r\n                            <Modal\r\n                                visible={modalVisibleEstado}\r\n                                animationType=\"slide\"\r\n                                transparent={true}\r\n                                onRequestClose={() => setModalVisibleEstado(false)}\r\n                            >\r\n                                <View style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}>\r\n                                    <View style={{ backgroundColor: \"white\", padding: 20, backgroundColor: \"#AF8A46\" }}>\r\n                                        <TouchableOpacity onPress={() => handleOptionSelectEstado(\"Aprobado\")}>\r\n                                            <Text style={{ textAlign: \"center\", marginTop: 10, backgroundColor: \"#EBBA5F\" }}>Aprobado</Text>\r\n                                        </TouchableOpacity>\r\n                                        <TouchableOpacity onPress={() => handleOptionSelectEstado(\"Rechazado\")}>\r\n                                            <Text style={{ textAlign: \"center\", marginTop: 30, marginBottom: 30, backgroundColor: \"#EBBA5F\" }}>Rechazado</Text>\r\n                                        </TouchableOpacity>\r\n                                        <TouchableOpacity onPress={() => handleOptionSelectEstado(\"Pendiente\")}>\r\n                                            <Text style={{ textAlign: \"center\", marginTop: 10, marginBottom: 30, backgroundColor: \"#EBBA5F\" }}>Pendiente</Text>\r\n                                        </TouchableOpacity>\r\n                                        <Button title=\"Cerrar\" onPress={() => setModalVisibleEstado(false)} />\r\n                                    </View>\r\n                                </View>\r\n                            </Modal>\r\n                        </>\r\n                    ) : null\r\n                }\r\n\r\n                {\r\n                    editing ? (\r\n                        <>\r\n                            <TextInput\r\n                                style={styles.input}\r\n                                placeholder=\"Observacion Solicitud\"\r\n                                placeholderTextColor=\"#000000\"\r\n                                value={solicitudes.observaciones_sol}\r\n                                onChangeText={(text) => {\r\n                                    setObservaciones(text);\r\n                                    handleChangeSolicitudes('observaciones_sol', text);\r\n                                }}\r\n                                maxLength={50}\r\n                            />\r\n                            {renderObservacionesWarning()}\r\n                        </>\r\n                    ) : null\r\n                }\r\n\r\n                {\r\n                    !editing ? (<TouchableOpacity disabled={!isButtonEnabled} onPress={handleSubmit}>\r\n                        <Text style={[styles.buttonText, isButtonEnabled ? styles.buttonEnabled : styles.buttonDisabled]}>\r\n                            Guardar Solicitud\r\n                        </Text>\r\n                    </TouchableOpacity>) : (<TouchableOpacity disabled={!isButtonEnabled} onPress={handleSubmit}>\r\n                        <Text style={[styles.buttonText, isButtonEnabled ? styles.buttonEnabled : styles.buttonDisabled]}>\r\n                            Actualizar Solicitud\r\n                        </Text>\r\n                    </TouchableOpacity>)\r\n                }\r\n\r\n\r\n            </Layout>\r\n        </ScrollView>\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    input: {\r\n        width: \"90%\",\r\n        backgroundColor: \"#fff\",\r\n        padding: 15,\r\n        marginTop: 20,\r\n        borderWidth: 3,\r\n        borderColor: \"#AF8A46\",\r\n    },\r\n    buttonText: {\r\n        backgroundColor: \"#AF8A46\",\r\n        marginTop: 10,\r\n        padding: 15,\r\n        color: \"#fff\",\r\n        textAlign: \"center\",\r\n        width: 330,\r\n    },\r\n    buttonEnabled: {\r\n        opacity: 1,\r\n    },\r\n    buttonDisabled: {\r\n        opacity: 0.5,\r\n    },\r\n    warningText: {\r\n        color: \"red\",\r\n        fontSize: 12,\r\n    },\r\n});\r\n\r\nexport default SolicitudesFormScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}