{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport React, { useState, useEffect } from 'react';\nimport TasksItem from \"./TasksItem\";\nimport { getPersonaAll } from \"../api\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar PersonaList = function PersonaList() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    persona = _useState2[0],\n    setPersona = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    refresing = _useState4[0],\n    setRefresing = _useState4[1];\n  var loadPersona = function () {\n    var _ref = _asyncToGenerator(function* () {\n      var data = yield getPersonaAll();\n      setPersona(data);\n    });\n    return function loadPersona() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    loadPersona();\n  }, []);\n  var renderItem = function renderItem(_ref2) {\n    var item = _ref2.item;\n    return _jsx(TasksItem, {\n      persona: item\n    });\n  };\n  var onRefresh = React.useCallback(_asyncToGenerator(function* () {\n    setRefresing(true);\n    yield loadPersona();\n    setRefresing(false);\n  }));\n  return _jsx(FlatList, {\n    style: {\n      width: 380\n    },\n    data: persona,\n    keyExtractor: function keyExtractor(item) {\n      return item.cedula_per + '';\n    },\n    renderItem: renderItem,\n    refreshControl: _jsx(RefreshControl, {\n      refreshing: refresing,\n      colors: ['#AF8A46'],\n      onRefresh: onRefresh,\n      progressBackgroundColor: \"#000\"\n    })\n  });\n};\nexport default PersonaList;","map":{"version":3,"names":["React","useState","useEffect","TasksItem","getPersonaAll","jsx","_jsx","PersonaList","_useState","_useState2","_slicedToArray","persona","setPersona","_useState3","_useState4","refresing","setRefresing","loadPersona","_ref","_asyncToGenerator","data","apply","arguments","renderItem","_ref2","item","onRefresh","useCallback","FlatList","style","width","keyExtractor","cedula_per","refreshControl","RefreshControl","refreshing","colors","progressBackgroundColor"],"sources":["C:/Users/chris/OneDrive/Escritorio/UTA/Aplicaciones Disribuidas/ReactNative/AD-app/components/TaskList.js"],"sourcesContent":["import { View, Text, FlatList, RefreshControl } from 'react-native'\r\nimport React, { useState, useEffect } from 'react'\r\n\r\nimport TasksItem from './TasksItem';\r\nimport { getPersonaAll } from \"../api\";\r\n\r\nconst PersonaList = () => {\r\n\r\n    const [persona, setPersona] = useState([])\r\n    const [refresing, setRefresing] = useState(false);\r\n\r\n    const loadPersona = async () => {\r\n        const data = await getPersonaAll()\r\n        /* console.log(data) */\r\n        setPersona(data)\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadPersona()\r\n    }, []);\r\n\r\n    const renderItem = ({ item }) => {\r\n        return <TasksItem persona={item} />\r\n    }\r\n\r\n    const onRefresh = React.useCallback(async () => {\r\n        setRefresing(true);\r\n        await loadPersona();\r\n        setRefresing(false);\r\n    })\r\n\r\n    return (\r\n        <FlatList\r\n            style={{ width: 380 }}\r\n            data={persona}\r\n            keyExtractor={(item) => item.cedula_per + ''}\r\n            renderItem={renderItem}\r\n            refreshControl={\r\n                <RefreshControl\r\n                    refreshing={refresing}\r\n                    colors={['#AF8A46']}\r\n                    onRefresh={onRefresh}\r\n                    progressBackgroundColor=\"#000\"\r\n                />\r\n            }\r\n        />\r\n    )\r\n}\r\n\r\nexport default PersonaList"],"mappings":";;;;;;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAElD,OAAOC,SAAS;AAChB,SAASC,aAAa;AAAiB,SAAAC,GAAA,IAAAC,IAAA;AAEvC,IAAMC,WAAW,GAAG,SAAdA,WAAWA,CAAA,EAAS;EAEtB,IAAAC,SAAA,GAA8BP,QAAQ,CAAC,EAAE,CAAC;IAAAQ,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAnCG,OAAO,GAAAF,UAAA;IAAEG,UAAU,GAAAH,UAAA;EAC1B,IAAAI,UAAA,GAAkCZ,QAAQ,CAAC,KAAK,CAAC;IAAAa,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAA1CE,SAAS,GAAAD,UAAA;IAAEE,YAAY,GAAAF,UAAA;EAE9B,IAAMG,WAAW;IAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,aAAY;MAC5B,IAAMC,IAAI,SAAShB,aAAa,CAAC,CAAC;MAElCQ,UAAU,CAACQ,IAAI,CAAC;IACpB,CAAC;IAAA,gBAJKH,WAAWA,CAAA;MAAA,OAAAC,IAAA,CAAAG,KAAA,OAAAC,SAAA;IAAA;EAAA,GAIhB;EAEDpB,SAAS,CAAC,YAAM;IACZe,WAAW,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,IAAMM,UAAU,GAAG,SAAbA,UAAUA,CAAAC,KAAA,EAAiB;IAAA,IAAXC,IAAI,GAAAD,KAAA,CAAJC,IAAI;IACtB,OAAOnB,IAAA,CAACH,SAAS;MAACQ,OAAO,EAAEc;IAAK,CAAE,CAAC;EACvC,CAAC;EAED,IAAMC,SAAS,GAAG1B,KAAK,CAAC2B,WAAW,CAAAR,iBAAA,CAAC,aAAY;IAC5CH,YAAY,CAAC,IAAI,CAAC;IAClB,MAAMC,WAAW,CAAC,CAAC;IACnBD,YAAY,CAAC,KAAK,CAAC;EACvB,CAAC,EAAC;EAEF,OACIV,IAAA,CAACsB,QAAQ;IACLC,KAAK,EAAE;MAAEC,KAAK,EAAE;IAAI,CAAE;IACtBV,IAAI,EAAET,OAAQ;IACdoB,YAAY,EAAE,SAAAA,aAACN,IAAI;MAAA,OAAKA,IAAI,CAACO,UAAU,GAAG,EAAE;IAAA,CAAC;IAC7CT,UAAU,EAAEA,UAAW;IACvBU,cAAc,EACV3B,IAAA,CAAC4B,cAAc;MACXC,UAAU,EAAEpB,SAAU;MACtBqB,MAAM,EAAE,CAAC,SAAS,CAAE;MACpBV,SAAS,EAAEA,SAAU;MACrBW,uBAAuB,EAAC;IAAM,CACjC;EACJ,CACJ,CAAC;AAEV,CAAC;AAED,eAAe9B,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}