{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar LoginScreen = function LoginScreen() {\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    cedula = _useState2[0],\n    setCedula = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    contrasenia = _useState4[0],\n    setContrasenia = _useState4[1];\n  var handleLogin = function handleLogin() {\n    console.log('Cédula:', cedula);\n    console.log('Contraseña:', contrasenia);\n  };\n  var renderCedulaWarning = function renderCedulaWarning() {\n    if (cedula.length < 10) {\n      return _jsx(Text, {\n        children: \"La cedula tiene que tener 10 digitos.\"\n      });\n    }\n    return null;\n  };\n  var renderContraseniaWarning = function renderContraseniaWarning() {\n    if (contrasenia.length < 5) {\n      return _jsx(Text, {\n        children: \"Ingrese una contrase\\xF1a valida, minimo 4 caracteres\"\n      });\n    }\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"C\\xE9dula\",\n      placeholderTextColor: \"#000000\",\n      value: cedula,\n      onChangeText: function onChangeText(text) {\n        var numericValue = text.replace(/[^0-9]/g, \"\");\n        setCedula(numericValue);\n      },\n      maxLength: 10,\n      keyboardType: \"numeric\"\n    }), renderCedulaWarning(), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Contrase\\xF1a\",\n      secureTextEntry: true,\n      value: contrasenia,\n      onChangeText: setContrasenia,\n      maxLength: 25\n    }), renderContraseniaWarning(), _jsx(Text, {}), _jsx(\"br\", {}), _jsx(Button, {\n      title: \"Iniciar sesi\\xF3n\",\n      onPress: handleLogin\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 16\n  },\n  input: {\n    width: '100%',\n    height: 40,\n    borderWidth: 1,\n    borderColor: '#ccc',\n    borderRadius: 4,\n    marginBottom: 16,\n    paddingHorizontal: 10\n  }\n});\nexport default LoginScreen;","map":{"version":3,"names":["React","useState","View","TextInput","Button","Platform","StyleSheet","Text","jsx","_jsx","jsxs","_jsxs","LoginScreen","_useState","_useState2","_slicedToArray","cedula","setCedula","_useState3","_useState4","contrasenia","setContrasenia","handleLogin","console","log","renderCedulaWarning","length","children","renderContraseniaWarning","style","styles","container","input","placeholder","placeholderTextColor","value","onChangeText","text","numericValue","replace","maxLength","keyboardType","secureTextEntry","title","onPress","create","flex","justifyContent","alignItems","padding","width","height","borderWidth","borderColor","borderRadius","marginBottom","paddingHorizontal"],"sources":["C:/Users/chris/OneDrive/Escritorio/UTA/Aplicaciones Disribuidas/ReactNative/AD-app/screens/LoginScreen.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, TextInput, Button, Platform, StyleSheet, Text } from 'react-native';\r\n\r\nconst LoginScreen = () => {\r\n  const [cedula, setCedula] = useState('');\r\n  const [contrasenia, setContrasenia] = useState('');\r\n\r\n  const handleLogin = () => {\r\n    // Realizar la lógica de inicio de sesión aquí\r\n    console.log('Cédula:', cedula);\r\n    console.log('Contraseña:', contrasenia);\r\n  };\r\n\r\n  const renderCedulaWarning = () => {\r\n    if (cedula.length < 10) {\r\n      return (\r\n        <Text>\r\n          La cedula tiene que tener 10 digitos.\r\n        </Text>\r\n      );\r\n    }\r\n    return null;\r\n  };\r\n\r\n  const renderContraseniaWarning = () =>{\r\n    if(contrasenia.length<5){\r\n        return(\r\n            <Text>\r\n                Ingrese una contraseña valida, minimo 4 caracteres\r\n            </Text>\r\n        )\r\n    }\r\n  }\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <TextInput\r\n        style={styles.input}\r\n        placeholder=\"Cédula\"\r\n        placeholderTextColor=\"#000000\"\r\n        value={cedula}\r\n        onChangeText={(text) => {\r\n            const numericValue = text.replace(/[^0-9]/g, \"\");\r\n            setCedula(numericValue);\r\n          }}\r\n        maxLength={10}\r\n        keyboardType=\"numeric\" // Permitir solo entrada numérica\r\n      />      \r\n        {renderCedulaWarning()}\r\n      <TextInput\r\n        style={styles.input}\r\n        placeholder=\"Contraseña\"\r\n        secureTextEntry\r\n        value={contrasenia}\r\n        onChangeText={setContrasenia}\r\n        maxLength={25}\r\n      />\r\n      {renderContraseniaWarning()}\r\n      <Text></Text>\r\n      <br></br>\r\n      <Button title=\"Iniciar sesión\" onPress={handleLogin} />\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    padding: 16,\r\n  },\r\n  input: {\r\n    width: '100%',\r\n    height: 40,\r\n    borderWidth: 1,\r\n    borderColor: '#ccc',\r\n    borderRadius: 4,\r\n    marginBottom: 16,\r\n    paddingHorizontal: 10,\r\n  },\r\n});\r\n\r\nexport default LoginScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}