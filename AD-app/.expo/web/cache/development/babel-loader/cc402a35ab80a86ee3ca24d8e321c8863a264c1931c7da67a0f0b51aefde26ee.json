{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React, { useState, useEffect, useContext } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Layout from \"../componentsWeb/Layout\";\nimport { postSolicitudes, getSolicitudes, updateSolicitudes } from \"../api\";\nimport { CedulaContext } from \"../componentsWeb/CedulaContext\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar SolicitudesFormScreen = function SolicitudesFormScreen(_ref) {\n  var navigation = _ref.navigation,\n    route = _ref.route;\n  var _useContext = useContext(CedulaContext),\n    cedulaGlobal = _useContext.cedulaGlobal;\n  var _useState = useState({\n      id_sol: \"\",\n      cedula_per: \"\",\n      id_equ: \"\",\n      estado_sol: \"\",\n      observaciones_sol: \"\"\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    solicitudes = _useState2[0],\n    setSolicitudes = _useState2[1];\n  useEffect(function () {\n    setSolicitudes(function (prevState) {\n      return _objectSpread(_objectSpread({}, prevState), {}, {\n        cedula_per: cedulaGlobal\n      });\n    });\n  }, [cedulaGlobal]);\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    editing = _useState4[0],\n    setEditing = _useState4[1];\n  var handleChangeSolicitudes = function handleChangeSolicitudes(name, value) {\n    return setSolicitudes(_objectSpread(_objectSpread({}, solicitudes), {}, _defineProperty({}, name, value)));\n  };\n  var handleSubmit = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        if (!editing) {\n          yield postSolicitudes(solicitudes);\n        } else {\n          yield updateSolicitudes(route.params.id_sol, solicitudes);\n        }\n        navigation.navigate('SolicitudesScreen');\n      } catch (error) {\n        if (error.response && error.response.status === 45000) {\n          Alert.alert(\"Error\", \"No es posible actualizar la solicitud porque el equipo está ocupado.\");\n        } else if (error.response && error.response.status === 404) {\n          Alert.alert(\"Error\", \"La cédula no se encuentra en la base de datos.\");\n        } else {\n          Alert.alert(\"Error\", \"Ocurrió un error al procesar la solicitud.\");\n        }\n      }\n    });\n    return function handleSubmit() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var _useState5 = useState(\"\"),\n    _useState6 = _slicedToArray(_useState5, 2),\n    id_sol = _useState6[0],\n    setIdSol = _useState6[1];\n  var _useState7 = useState(\"\"),\n    _useState8 = _slicedToArray(_useState7, 2),\n    cedula_per = _useState8[0],\n    setCedula = _useState8[1];\n  var _useState9 = useState(\"\"),\n    _useState10 = _slicedToArray(_useState9, 2),\n    id_equ = _useState10[0],\n    setIdEqu = _useState10[1];\n  var _useState11 = useState(\"\"),\n    _useState12 = _slicedToArray(_useState11, 2),\n    estado_sol = _useState12[0],\n    setEstado = _useState12[1];\n  var _useState13 = useState(\"\"),\n    _useState14 = _slicedToArray(_useState13, 2),\n    observaciones_sol = _useState14[0],\n    setObservaciones = _useState14[1];\n  var _useState15 = useState(false),\n    _useState16 = _slicedToArray(_useState15, 2),\n    isButtonEnabled = _useState16[0],\n    setButtonEnabled = _useState16[1];\n  var _useState17 = useState(false),\n    _useState18 = _slicedToArray(_useState17, 2),\n    modalVisibleEstado = _useState18[0],\n    setModalVisibleEstado = _useState18[1];\n  var _useState19 = useState(\"\"),\n    _useState20 = _slicedToArray(_useState19, 2),\n    selectedOptionEstado = _useState20[0],\n    setSelectedOptionEstado = _useState20[1];\n  var handleOptionSelectEstado = function handleOptionSelectEstado(option) {\n    setSelectedOptionEstado(option);\n    setEstado(option);\n    setModalVisibleEstado(false);\n    handleChangeSolicitudes(\"estado_sol\", option);\n    validateFields();\n  };\n  useEffect(function () {\n    validateFields();\n  }, [id_sol, cedula_per, id_equ, estado_sol, observaciones_sol]);\n  var validateInput = function validateInput(text) {\n    var regex = /^[a-zA-Z]+$/;\n    if (regex.test(text) || text === \"\") {\n      return true;\n    }\n    return false;\n  };\n  var validateFields = function validateFields() {\n    var requiredFields = [cedula_per, id_equ];\n    var isAnyFieldEmpty = requiredFields.some(function (field) {\n      return field === \"\";\n    });\n    var isCedulaValid = cedula_per.length === 10;\n    setButtonEnabled(!isAnyFieldEmpty && isCedulaValid);\n  };\n  var renderIdSolWarning = function renderIdSolWarning() {\n    if (id_sol.length < 1) {\n      return _jsx(Text, {\n        style: styles.warningText,\n        children: \"El id se asigna automaticamente\"\n      });\n    }\n    return null;\n  };\n  var renderCedulaWarning = function renderCedulaWarning() {\n    if (cedula_per.length < 10) {\n      return _jsx(Text, {\n        style: styles.warningText,\n        children: \"La cedula tiene que tener 10 digitos.\"\n      });\n    }\n    return null;\n  };\n  var renderIdEquWarning = function renderIdEquWarning() {\n    if (id_equ.length < 1) {\n      return _jsx(Text, {\n        style: styles.warningText,\n        children: \"Ingrese un id existente\"\n      });\n    }\n    return null;\n  };\n  var renderEstadoWarning = function renderEstadoWarning() {\n    if (estado_sol.length < 1) {\n      return _jsx(Text, {\n        style: styles.warningText,\n        children: \"Seleccione el estado de la maquina\"\n      });\n    }\n    return null;\n  };\n  var renderObservacionesWarning = function renderObservacionesWarning() {\n    if (observaciones_sol.length < 4) {\n      return _jsx(Text, {\n        style: styles.warningText,\n        children: \"Ingrese una observacion valida, minimo 4 caracteres\"\n      });\n    }\n    return null;\n  };\n  useEffect(function () {\n    if (route.params && route.params.id_sol) {\n      navigation.setOptions({\n        headerTitle: 'Modificando una solicitud'\n      });\n      setEditing(true);\n      _asyncToGenerator(function* () {\n        var solicitudes = yield getSolicitudes(route.params.id_sol);\n        setSolicitudes({\n          id_sol: solicitudes.id_sol,\n          cedula_per: solicitudes.cedula_per,\n          id_equ: solicitudes.id_equ,\n          estado_sol: solicitudes.estado_sol,\n          observaciones_sol: solicitudes.observaciones_sol\n        });\n        setIdSol(solicitudes.id_sol);\n        setCedula(solicitudes.cedula_per);\n        setIdEqu(solicitudes.id_equ);\n        setEstado(solicitudes.estado_sol);\n        setObservaciones(solicitudes.observaciones_sol);\n        validateFields();\n      })();\n    }\n  }, []);\n  useEffect(function () {\n    if (route.params && route.params.id_equ) {\n      setIdEqu(route.params.id_equ);\n      handleChangeSolicitudes('id_equ', route.params.id_equ);\n    }\n  }, []);\n  useEffect(function () {\n    if (route.params && route.params.id_equ) {\n      setIdEqu(route.params.id_equ);\n      handleChangeSolicitudes('id_equ', route.params.id_equ);\n    }\n  }, []);\n  return _jsx(ScrollView, {\n    children: _jsxs(Layout, {\n      children: [editing ? _jsxs(_Fragment, {\n        children: [_jsx(TextInput, {\n          style: styles.input,\n          placeholder: \"Id Solicitud\",\n          placeholderTextColor: \"#000000\",\n          value: solicitudes.id_sol.toString(),\n          onChangeText: function onChangeText(text) {\n            setId(text);\n            handleChangeEquipos('id_sol', text);\n          },\n          editable: route.params && route.params.id_sol ? false : false\n        }), renderIdSolWarning()]\n      }) : null, _jsx(TextInput, {\n        style: styles.input,\n        placeholder: \"Cedula Persona\",\n        placeholderTextColor: \"#000000\",\n        value: solicitudes.cedula_per.toString(),\n        onChangeText: function onChangeText(text) {\n          setCedula(text);\n          handleChangeSolicitudes('cedula_per', text);\n        },\n        maxLength: 10,\n        keyboardType: \"numeric\",\n        editable: route.params && route.params.id_sol ? false : false\n      }), renderCedulaWarning(), _jsx(TextInput, {\n        style: styles.input,\n        placeholder: \"Id Equipo\",\n        placeholderTextColor: \"#000000\",\n        value: solicitudes.id_equ.toString(),\n        onChangeText: function onChangeText(text) {\n          setIdEqu(text);\n          handleChangeSolicitudes('id_equ', text);\n        },\n        maxLength: 10,\n        editable: route.params && route.params.id_sol ? false : false\n      }), renderIdEquWarning(), editing ? _jsxs(_Fragment, {\n        children: [_jsx(TextInput, {\n          style: styles.input,\n          placeholder: \"Estado Solicitud\",\n          placeholderTextColor: \"#000000\",\n          value: solicitudes.estado_sol,\n          onChangeText: function onChangeText(text) {\n            setEstado(text);\n            handleChangeEquipos('estado_sol', text);\n          },\n          onFocus: function onFocus() {\n            return setModalVisibleEstado(true);\n          },\n          editable: false\n        }), renderEstadoWarning(), _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            return setModalVisibleEstado(true);\n          },\n          children: _jsx(Text, {\n            style: styles.buttonText,\n            children: \"Seleccionar Estado\"\n          })\n        }), _jsx(Modal, {\n          visible: modalVisibleEstado,\n          animationType: \"slide\",\n          transparent: true,\n          onRequestClose: function onRequestClose() {\n            return setModalVisibleEstado(false);\n          },\n          children: _jsx(View, {\n            style: {\n              flex: 1,\n              justifyContent: \"center\",\n              alignItems: \"center\"\n            },\n            children: _jsxs(View, {\n              style: {\n                backgroundColor: \"white\",\n                padding: 20,\n                backgroundColor: \"#AF8A46\"\n              },\n              children: [_jsx(TouchableOpacity, {\n                onPress: function onPress() {\n                  return handleOptionSelectEstado(\"Aprobado\");\n                },\n                children: _jsx(Text, {\n                  style: {\n                    textAlign: \"center\",\n                    marginTop: 10,\n                    backgroundColor: \"#EBBA5F\"\n                  },\n                  children: \"Aprobado\"\n                })\n              }), _jsx(TouchableOpacity, {\n                onPress: function onPress() {\n                  return handleOptionSelectEstado(\"Rechazado\");\n                },\n                children: _jsx(Text, {\n                  style: {\n                    textAlign: \"center\",\n                    marginTop: 30,\n                    marginBottom: 30,\n                    backgroundColor: \"#EBBA5F\"\n                  },\n                  children: \"Rechazado\"\n                })\n              }), _jsx(TouchableOpacity, {\n                onPress: function onPress() {\n                  return handleOptionSelectEstado(\"Pendiente\");\n                },\n                children: _jsx(Text, {\n                  style: {\n                    textAlign: \"center\",\n                    marginTop: 10,\n                    marginBottom: 30,\n                    backgroundColor: \"#EBBA5F\"\n                  },\n                  children: \"Pendiente\"\n                })\n              }), _jsx(Button, {\n                title: \"Cerrar\",\n                onPress: function onPress() {\n                  return setModalVisibleEstado(false);\n                }\n              })]\n            })\n          })\n        })]\n      }) : null, editing ? _jsxs(_Fragment, {\n        children: [_jsx(TextInput, {\n          style: styles.input,\n          placeholder: \"Observacion Solicitud\",\n          placeholderTextColor: \"#000000\",\n          value: solicitudes.observaciones_sol,\n          onChangeText: function onChangeText(text) {\n            setObservaciones(text);\n            handleChangeSolicitudes('observaciones_sol', text);\n          },\n          maxLength: 50\n        }), renderObservacionesWarning()]\n      }) : null, !editing ? _jsx(TouchableOpacity, {\n        disabled: !isButtonEnabled,\n        onPress: handleSubmit,\n        children: _jsx(Text, {\n          style: [styles.buttonText, isButtonEnabled ? styles.buttonEnabled : styles.buttonDisabled],\n          children: \"Guardar Solicitud\"\n        })\n      }) : _jsx(TouchableOpacity, {\n        disabled: !isButtonEnabled,\n        onPress: handleSubmit,\n        children: _jsx(Text, {\n          style: [styles.buttonText, isButtonEnabled ? styles.buttonEnabled : styles.buttonDisabled],\n          children: \"Actualizar Solicitud\"\n        })\n      })]\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  input: {\n    width: \"90%\",\n    backgroundColor: \"#fff\",\n    padding: 15,\n    marginTop: 20,\n    borderWidth: 3,\n    borderColor: \"#AF8A46\"\n  },\n  buttonText: {\n    backgroundColor: \"#AF8A46\",\n    marginTop: 10,\n    padding: 15,\n    color: \"#fff\",\n    textAlign: \"center\",\n    width: 330\n  },\n  buttonEnabled: {\n    opacity: 1\n  },\n  buttonDisabled: {\n    opacity: 0.5\n  },\n  warningText: {\n    color: \"red\",\n    fontSize: 12\n  }\n});\nexport default SolicitudesFormScreen;","map":{"version":3,"names":["React","useState","useEffect","useContext","View","Text","TextInput","StyleSheet","TouchableOpacity","ScrollView","Modal","Button","Alert","Layout","postSolicitudes","getSolicitudes","updateSolicitudes","CedulaContext","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","SolicitudesFormScreen","_ref","navigation","route","_useContext","cedulaGlobal","_useState","id_sol","cedula_per","id_equ","estado_sol","observaciones_sol","_useState2","_slicedToArray","solicitudes","setSolicitudes","prevState","_objectSpread","_useState3","_useState4","editing","setEditing","handleChangeSolicitudes","name","value","_defineProperty","handleSubmit","_ref2","_asyncToGenerator","params","navigate","error","response","status","alert","apply","arguments","_useState5","_useState6","setIdSol","_useState7","_useState8","setCedula","_useState9","_useState10","setIdEqu","_useState11","_useState12","setEstado","_useState13","_useState14","setObservaciones","_useState15","_useState16","isButtonEnabled","setButtonEnabled","_useState17","_useState18","modalVisibleEstado","setModalVisibleEstado","_useState19","_useState20","selectedOptionEstado","setSelectedOptionEstado","handleOptionSelectEstado","option","validateFields","validateInput","text","regex","test","requiredFields","isAnyFieldEmpty","some","field","isCedulaValid","length","renderIdSolWarning","style","styles","warningText","children","renderCedulaWarning","renderIdEquWarning","renderEstadoWarning","renderObservacionesWarning","setOptions","headerTitle","input","placeholder","placeholderTextColor","toString","onChangeText","setId","handleChangeEquipos","editable","maxLength","keyboardType","onFocus","onPress","buttonText","visible","animationType","transparent","onRequestClose","flex","justifyContent","alignItems","backgroundColor","padding","textAlign","marginTop","marginBottom","title","disabled","buttonEnabled","buttonDisabled","create","width","borderWidth","borderColor","color","opacity","fontSize"],"sources":["C:/Users/chris/OneDrive/Escritorio/UTA/Aplicaciones Disribuidas/ReactNative/AD-app/screen/SolicitudesFormScreen.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\r\nimport { View, Text, TextInput, StyleSheet, TouchableOpacity, ScrollView, Modal, Button, Alert } from \"react-native\";\r\n\r\nimport Layout from \"../componentsWeb/Layout\";\r\nimport { postSolicitudes, getSolicitudes, updateSolicitudes } from \"../api\";\r\n\r\nimport { CedulaContext } from '../componentsWeb/CedulaContext';\r\n\r\nconst SolicitudesFormScreen = ({ navigation, route }) => {\r\n\r\n    const { cedulaGlobal } = useContext(CedulaContext);\r\n\r\n    const [solicitudes, setSolicitudes] = useState({\r\n        id_sol: \"\",\r\n        cedula_per: \"\",\r\n        id_equ: \"\",\r\n        estado_sol: \"\",\r\n        observaciones_sol: \"\",\r\n    });\r\n\r\n    useEffect(() => {\r\n        // Capturar el valor de cedulaGlobal en el estado solicitudes\r\n        setSolicitudes((prevState) => ({\r\n          ...prevState,\r\n          cedula_per: cedulaGlobal,\r\n        }));\r\n      }, [cedulaGlobal]);\r\n\r\n    const [editing, setEditing] = useState(false);\r\n    const handleChangeSolicitudes = (name, value) => setSolicitudes({ ...solicitudes, [name]: value });\r\n\r\n    const handleSubmit = async () => {\r\n        try {\r\n            if (!editing) {\r\n                await postSolicitudes(solicitudes);\r\n            } else {\r\n                await updateSolicitudes(route.params.id_sol, solicitudes);\r\n            }\r\n            navigation.navigate('SolicitudesScreen')\r\n        } catch (error) {\r\n            if (error.response && error.response.status === 45000) {\r\n                Alert.alert(\"Error\", \"No es posible actualizar la solicitud porque el equipo está ocupado.\");\r\n            } else if (error.response && error.response.status === 404) {\r\n                Alert.alert(\"Error\", \"La cédula no se encuentra en la base de datos.\");\r\n            } else {\r\n                Alert.alert(\"Error\", \"Ocurrió un error al procesar la solicitud.\");\r\n            }\r\n        }\r\n    };\r\n\r\n\r\n    const [id_sol, setIdSol] = useState(\"\");\r\n    const [cedula_per, setCedula] = useState(\"\");\r\n    const [id_equ, setIdEqu] = useState(\"\");\r\n    const [estado_sol, setEstado] = useState(\"\");\r\n    const [observaciones_sol, setObservaciones] = useState(\"\");\r\n\r\n    const [isButtonEnabled, setButtonEnabled] = useState(false);\r\n    const [modalVisibleEstado, setModalVisibleEstado] = useState(false);\r\n    const [selectedOptionEstado, setSelectedOptionEstado] = useState(\"\");\r\n\r\n    const handleOptionSelectEstado = (option) => {\r\n        setSelectedOptionEstado(option);\r\n        setEstado(option);\r\n        setModalVisibleEstado(false);\r\n        handleChangeSolicitudes(\"estado_sol\", option);\r\n        validateFields();\r\n    };\r\n\r\n    useEffect(() => {\r\n        validateFields();\r\n    }, [\r\n        id_sol,\r\n        cedula_per,\r\n        id_equ,\r\n        estado_sol,\r\n        observaciones_sol,\r\n    ]);\r\n\r\n    const validateInput = (text) => {\r\n        const regex = /^[a-zA-Z]+$/;\r\n        if (regex.test(text) || text === \"\") {\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n\r\n    const validateFields = () => {\r\n        const requiredFields = [\r\n            cedula_per,\r\n            id_equ,\r\n        ];\r\n        const isAnyFieldEmpty = requiredFields.some((field) => field === \"\");\r\n        const isCedulaValid = cedula_per.length === 10;\r\n\r\n        setButtonEnabled(!isAnyFieldEmpty && isCedulaValid);\r\n\r\n    };\r\n\r\n    const renderIdSolWarning = () => {\r\n        if (id_sol.length < 1) {\r\n            return (\r\n                <Text style={styles.warningText}>\r\n                    El id se asigna automaticamente\r\n                </Text>\r\n            );\r\n        }\r\n        return null;\r\n    };\r\n\r\n    const renderCedulaWarning = () => {\r\n        if (cedula_per.length < 10) {\r\n            return (\r\n                <Text style={styles.warningText}>\r\n                    La cedula tiene que tener 10 digitos.\r\n                </Text>\r\n            );\r\n        }\r\n        return null;\r\n    };\r\n\r\n    const renderIdEquWarning = () => {\r\n        if (id_equ.length < 1) {\r\n            return (\r\n                <Text style={styles.warningText}>\r\n                    Ingrese un id existente\r\n                </Text>\r\n            );\r\n        }\r\n        return null;\r\n    };\r\n\r\n    const renderEstadoWarning = () => {\r\n        if (estado_sol.length < 1) {\r\n            return (\r\n                <Text style={styles.warningText}>\r\n                    Seleccione el estado de la maquina\r\n                </Text>\r\n            );\r\n        }\r\n        return null;\r\n    };\r\n\r\n    const renderObservacionesWarning = () => {\r\n        if (observaciones_sol.length < 4) {\r\n            return (\r\n                <Text style={styles.warningText}>\r\n                    Ingrese una observacion valida, minimo 4 caracteres\r\n                </Text>\r\n            );\r\n        }\r\n        return null;\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (route.params && route.params.id_sol) {\r\n            navigation.setOptions({ headerTitle: 'Modificando una solicitud' });\r\n            setEditing(true);\r\n            (async () => {\r\n                const solicitudes = await getSolicitudes(route.params.id_sol);\r\n                setSolicitudes({\r\n                    id_sol: solicitudes.id_sol,\r\n                    cedula_per: solicitudes.cedula_per,\r\n                    id_equ: solicitudes.id_equ,\r\n                    estado_sol: solicitudes.estado_sol,\r\n                    observaciones_sol: solicitudes.observaciones_sol,\r\n                })\r\n\r\n                // Establecer los valores iniciales en los TextInput\r\n                setIdSol(solicitudes.id_sol);\r\n                setCedula(solicitudes.cedula_per);\r\n                setIdEqu(solicitudes.id_equ);\r\n                setEstado(solicitudes.estado_sol);\r\n                setObservaciones(solicitudes.observaciones_sol);\r\n\r\n                // Comprobar los valores de los TextInput\r\n                validateFields();\r\n            })();\r\n        }\r\n    }, [])    \r\n\r\n    useEffect(() => {\r\n        if (route.params && route.params.id_equ) {\r\n            setIdEqu(route.params.id_equ);\r\n            handleChangeSolicitudes('id_equ', route.params.id_equ);\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (route.params && route.params.id_equ) {\r\n            setIdEqu(route.params.id_equ);\r\n            handleChangeSolicitudes('id_equ', route.params.id_equ);\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <ScrollView>\r\n            <Layout>\r\n\r\n                {\r\n                    editing ? (<><TextInput\r\n                        style={styles.input}\r\n                        placeholder=\"Id Solicitud\"\r\n                        placeholderTextColor=\"#000000\"\r\n                        value={solicitudes.id_sol.toString()}\r\n                        onChangeText={(text) => {\r\n                            setId(text);\r\n                            handleChangeEquipos('id_sol', text);\r\n                        }}\r\n                        editable={route.params && route.params.id_sol ? false : false} // Desactivar edición\r\n                    />\r\n                        {renderIdSolWarning()}</>) : (null)\r\n                }\r\n\r\n                <TextInput\r\n                    style={styles.input}\r\n                    placeholder=\"Cedula Persona\"\r\n                    placeholderTextColor=\"#000000\"\r\n                    value={solicitudes.cedula_per.toString()}\r\n                    onChangeText={(text) => {\r\n                        setCedula(text);\r\n                        handleChangeSolicitudes('cedula_per', text);\r\n                    }}\r\n                    maxLength={10}\r\n                    keyboardType=\"numeric\" // Permitir solo entrada numérica\r\n                    editable={route.params && route.params.id_sol ? false : false}\r\n                />\r\n                {renderCedulaWarning()}\r\n                <TextInput\r\n                    style={styles.input}\r\n                    placeholder=\"Id Equipo\"\r\n                    placeholderTextColor=\"#000000\"\r\n                    value={solicitudes.id_equ.toString()}\r\n                    onChangeText={(text) => {\r\n                        setIdEqu(text);\r\n                        handleChangeSolicitudes('id_equ', text);\r\n                    }}\r\n                    maxLength={10}\r\n                    editable={route.params && route.params.id_sol ? false : false}\r\n                />\r\n                {renderIdEquWarning()}\r\n\r\n                {\r\n                    editing ? (\r\n                        <>\r\n                            <TextInput\r\n                                style={styles.input}\r\n                                placeholder=\"Estado Solicitud\"\r\n                                placeholderTextColor=\"#000000\"\r\n                                value={solicitudes.estado_sol}\r\n                                onChangeText={(text) => {\r\n                                    setEstado(text);\r\n                                    handleChangeEquipos('estado_sol', text);\r\n                                }}\r\n                                onFocus={() => setModalVisibleEstado(true)}\r\n                                editable={false}\r\n                            />\r\n                            {renderEstadoWarning()}\r\n                            <TouchableOpacity onPress={() => setModalVisibleEstado(true)}>\r\n                                <Text style={styles.buttonText}>Seleccionar Estado</Text>\r\n                            </TouchableOpacity>\r\n                            <Modal\r\n                                visible={modalVisibleEstado}\r\n                                animationType=\"slide\"\r\n                                transparent={true}\r\n                                onRequestClose={() => setModalVisibleEstado(false)}\r\n                            >\r\n                                <View style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}>\r\n                                    <View style={{ backgroundColor: \"white\", padding: 20, backgroundColor: \"#AF8A46\" }}>\r\n                                        <TouchableOpacity onPress={() => handleOptionSelectEstado(\"Aprobado\")}>\r\n                                            <Text style={{ textAlign: \"center\", marginTop: 10, backgroundColor: \"#EBBA5F\" }}>Aprobado</Text>\r\n                                        </TouchableOpacity>\r\n                                        <TouchableOpacity onPress={() => handleOptionSelectEstado(\"Rechazado\")}>\r\n                                            <Text style={{ textAlign: \"center\", marginTop: 30, marginBottom: 30, backgroundColor: \"#EBBA5F\" }}>Rechazado</Text>\r\n                                        </TouchableOpacity>\r\n                                        <TouchableOpacity onPress={() => handleOptionSelectEstado(\"Pendiente\")}>\r\n                                            <Text style={{ textAlign: \"center\", marginTop: 10, marginBottom: 30, backgroundColor: \"#EBBA5F\" }}>Pendiente</Text>\r\n                                        </TouchableOpacity>\r\n                                        <Button title=\"Cerrar\" onPress={() => setModalVisibleEstado(false)} />\r\n                                    </View>\r\n                                </View>\r\n                            </Modal>\r\n                        </>\r\n                    ) : null\r\n                }\r\n\r\n                {\r\n                    editing ? (\r\n                        <>\r\n                            <TextInput\r\n                                style={styles.input}\r\n                                placeholder=\"Observacion Solicitud\"\r\n                                placeholderTextColor=\"#000000\"\r\n                                value={solicitudes.observaciones_sol}\r\n                                onChangeText={(text) => {\r\n                                    setObservaciones(text);\r\n                                    handleChangeSolicitudes('observaciones_sol', text);\r\n                                }}\r\n                                maxLength={50}\r\n                            />\r\n                            {renderObservacionesWarning()}\r\n                        </>\r\n                    ) : null\r\n                }\r\n\r\n                {\r\n                    !editing ? (<TouchableOpacity disabled={!isButtonEnabled} onPress={handleSubmit}>\r\n                        <Text style={[styles.buttonText, isButtonEnabled ? styles.buttonEnabled : styles.buttonDisabled]}>\r\n                            Guardar Solicitud\r\n                        </Text>\r\n                    </TouchableOpacity>) : (<TouchableOpacity disabled={!isButtonEnabled} onPress={handleSubmit}>\r\n                        <Text style={[styles.buttonText, isButtonEnabled ? styles.buttonEnabled : styles.buttonDisabled]}>\r\n                            Actualizar Solicitud\r\n                        </Text>\r\n                    </TouchableOpacity>)\r\n                }\r\n\r\n\r\n            </Layout>\r\n        </ScrollView>\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    input: {\r\n        width: \"90%\",\r\n        backgroundColor: \"#fff\",\r\n        padding: 15,\r\n        marginTop: 20,\r\n        borderWidth: 3,\r\n        borderColor: \"#AF8A46\",\r\n    },\r\n    buttonText: {\r\n        backgroundColor: \"#AF8A46\",\r\n        marginTop: 10,\r\n        padding: 15,\r\n        color: \"#fff\",\r\n        textAlign: \"center\",\r\n        width: 330,\r\n    },\r\n    buttonEnabled: {\r\n        opacity: 1,\r\n    },\r\n    buttonDisabled: {\r\n        opacity: 0.5,\r\n    },\r\n    warningText: {\r\n        color: \"red\",\r\n        fontSize: 12,\r\n    },\r\n});\r\n\r\nexport default SolicitudesFormScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}