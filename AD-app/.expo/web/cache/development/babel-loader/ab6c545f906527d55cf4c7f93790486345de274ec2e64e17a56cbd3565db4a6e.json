{"ast":null,"code":"import React from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport HomeScreen from \"./screens/HomeScreen\";\nimport PersonaFormScreen from \"./screens/PersonaFormScreen\";\nimport PersonaScreen from \"./screens/PersonaScreen\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nvar App = function App() {\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Stack.Navigator, {\n      children: [_jsx(Stack.Screen, {\n        name: \"PersonaScreen\",\n        component: PersonaScreen,\n        options: function options(_ref) {\n          var navigation = _ref.navigation;\n          return {\n            title: 'ListadoPersonas',\n            headerStyle: {\n              backgroundColor: '##AF8A46'\n            },\n            headerTitleStyle: {\n              color: '#fff'\n            },\n            headerRight: function headerRight() {\n              return _jsx(TouchableOpacity, {\n                onPress: function onPress() {\n                  return navigation.navigate('PersonaFormScreen');\n                },\n                children: _jsx(Text, {\n                  style: {\n                    color: '#fff',\n                    marginRight: 20,\n                    fontSize: 17\n                  },\n                  children: \"Nueva Persona\"\n                })\n              });\n            }\n          };\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"PersonaFormScreen\",\n        component: PersonaFormScreen,\n        options: {\n          title: 'Crear Nueva Persona',\n          headerStyle: {\n            backgroundColor: '##AF8A46'\n          },\n          headerTitleStyle: {\n            color: '#fff'\n          },\n          headerTintColor: '#fff'\n        }\n      })]\n    })\n  });\n};\nexport default App;","map":{"version":3,"names":["React","Text","TouchableOpacity","NavigationContainer","createNativeStackNavigator","HomeScreen","PersonaFormScreen","PersonaScreen","jsx","_jsx","jsxs","_jsxs","Stack","App","children","Navigator","Screen","name","component","options","_ref","navigation","title","headerStyle","backgroundColor","headerTitleStyle","color","headerRight","onPress","navigate","style","marginRight","fontSize","headerTintColor"],"sources":["C:/Users/chris/OneDrive/Escritorio/UTA/Aplicaciones Disribuidas/ReactNative/AD-app/App.js"],"sourcesContent":["import React from \"react\";\nimport { Text, TouchableOpacity } from \"react-native\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\n\nimport HomeScreen from \"./screens/HomeScreen\";\nimport PersonaFormScreen from \"./screens/PersonaFormScreen\";\nimport PersonaScreen from \"./screens/PersonaScreen\";\n\nconst Stack = createNativeStackNavigator();\n\nconst App = () => {\n  return (\n    <NavigationContainer>\n      <Stack.Navigator>\n        {/* <Stack.Screen name=\"HomeScreen\" component={HomeScreen}/> */}\n        <Stack.Screen name=\"PersonaScreen\" component={PersonaScreen} \n        options={({ navigation }) => ({\n          title: 'ListadoPersonas',\n          headerStyle: { backgroundColor: '##AF8A46' }, \n          headerTitleStyle: { color: '#fff' },\n          headerRight: () =>(\n            <TouchableOpacity onPress={() => navigation.navigate('PersonaFormScreen')}>\n              <Text style={{color: '#fff', marginRight: 20, fontSize: 17}}>Nueva Persona</Text>\n            </TouchableOpacity>\n          ),\n        })}\n          />\n        <Stack.Screen name=\"PersonaFormScreen\" component={PersonaFormScreen}\n        options={{ \n          title: 'Crear Nueva Persona',\n          headerStyle: { backgroundColor: '##AF8A46' },\n          headerTitleStyle: { color: '#fff'},\n          headerTintColor: '#fff',\n        }}\n        />\n      </Stack.Navigator>\n    </NavigationContainer>\n  )\n}\n\nexport default App"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,gBAAA;AAE1B,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,0BAA0B,QAAQ,gCAAgC;AAE3E,OAAOC,UAAU;AACjB,OAAOC,iBAAiB;AACxB,OAAOC,aAAa;AAAgC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEpD,IAAMC,KAAK,GAAGR,0BAA0B,CAAC,CAAC;AAE1C,IAAMS,GAAG,GAAG,SAANA,GAAGA,CAAA,EAAS;EAChB,OACEJ,IAAA,CAACN,mBAAmB;IAAAW,QAAA,EAClBH,KAAA,CAACC,KAAK,CAACG,SAAS;MAAAD,QAAA,GAEdL,IAAA,CAACG,KAAK,CAACI,MAAM;QAACC,IAAI,EAAC,eAAe;QAACC,SAAS,EAAEX,aAAc;QAC5DY,OAAO,EAAE,SAAAA,QAAAC,IAAA;UAAA,IAAGC,UAAU,GAAAD,IAAA,CAAVC,UAAU;UAAA,OAAQ;YAC5BC,KAAK,EAAE,iBAAiB;YACxBC,WAAW,EAAE;cAAEC,eAAe,EAAE;YAAW,CAAC;YAC5CC,gBAAgB,EAAE;cAAEC,KAAK,EAAE;YAAO,CAAC;YACnCC,WAAW,EAAE,SAAAA,YAAA;cAAA,OACXlB,IAAA,CAACP,gBAAgB;gBAAC0B,OAAO,EAAE,SAAAA,QAAA;kBAAA,OAAMP,UAAU,CAACQ,QAAQ,CAAC,mBAAmB,CAAC;gBAAA,CAAC;gBAAAf,QAAA,EACxEL,IAAA,CAACR,IAAI;kBAAC6B,KAAK,EAAE;oBAACJ,KAAK,EAAE,MAAM;oBAAEK,WAAW,EAAE,EAAE;oBAAEC,QAAQ,EAAE;kBAAE,CAAE;kBAAAlB,QAAA,EAAC;gBAAa,CAAM;cAAC,CACjE,CAAC;YAAA;UAEvB,CAAC;QAAA;MAAE,CACA,CAAC,EACJL,IAAA,CAACG,KAAK,CAACI,MAAM;QAACC,IAAI,EAAC,mBAAmB;QAACC,SAAS,EAAEZ,iBAAkB;QACpEa,OAAO,EAAE;UACPG,KAAK,EAAE,qBAAqB;UAC5BC,WAAW,EAAE;YAAEC,eAAe,EAAE;UAAW,CAAC;UAC5CC,gBAAgB,EAAE;YAAEC,KAAK,EAAE;UAAM,CAAC;UAClCO,eAAe,EAAE;QACnB;MAAE,CACD,CAAC;IAAA,CACa;EAAC,CACC,CAAC;AAE1B,CAAC;AAED,eAAepB,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}